{"version":3,"sources":["components/fileUpload.js","components/convertType.js","components/agreement.js","components/privacyPolicy.js","containers/main.js","App.js","actions/index.js","reducers/index.js","index.js"],"names":["Url","process","FilePondLanguage","labelIdle","FileUpload","selectedFunder","this","props","server","url","onload","res","iframe","document","createElement","id","Math","random","style","display","body","appendChild","src","className","allowMultiple","Component","ConvertType","changeFunder","handleChange","e","target","value","FormLabel","component","map","x","i","FormControlLabel","name","control","Radio","color","label","key","checked","onChange","Agreement","open","setOpen","handleClose","openDialog","Dialog","onClose","aria-labelledby","aria-describedby","fullWidth","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","PrivacyPolicy","openPPDialog","textAlign","Main","state","termsAgreed","Checkbox","inputProps","setState","Link","href","App","connect","dispatch","funder","type","payload","initialState","reducer","action","store","createStore","Reducer","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fcf57a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FilePond } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nconst Url = process.env.PUBLIC_URL;\n\nconst FilePondLanguage = {\n  labelIdle: `Drag&Drop or  <span class=\"filepond--label-action\">Browse</span> your file exported from DMPonline in .TXT format.`,\n};\nclass FileUpload extends Component {\n  render() {\n    const { selectedFunder } = this.props;\n    const server = {\n      url: `${Url}/convert/${selectedFunder}`,\n      process: {\n        onload: (res) => {\n          var iframe = document.createElement(\"iframe\");\n          iframe.id = \"iframe\" + Math.random();\n          iframe.style.display = \"none\";\n          document.body.appendChild(iframe);\n          iframe.src = `${Url}/download/${res}.pdf`;\n        },\n      },\n    };\n    return (\n      <div className=\"uploadContainer\">\n        <FilePond {...FilePondLanguage} allowMultiple={true} server={server} />\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","import React, { Component } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nclass ConvertType extends Component {\n  render() {\n    const { changeFunder, selectedFunder } = this.props;\n    const funders = [\"FWO\", \"ERC\", \"H2020\"];\n    const handleChange = (e) => {\n      changeFunder(e.target.value);\n    };\n    return (\n      <div className=\"funderType\">\n        <FormLabel component=\"legend\">Convert from ELIXIR Belgium template to:</FormLabel>\n        <div>\n          {funders.map((x, i) => {\n            return (\n              <FormControlLabel\n                name=\"funder\"\n                value={x}\n                control={<Radio color=\"primary\" />}\n                label={x}\n                key={i}\n                checked={x === selectedFunder}\n                onChange={handleChange}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConvertType;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function Agreement(props) {\n  const { open, setOpen } = props;\n  const handleClose = () => {\n    setOpen({ openDialog: false });\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth=\"true\"\n        maxWidth=\"md\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">DMP Converter terms & conditions</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            MIT License\n            <br />\n            <br />\n            Copyright (c) 2020 DMP Converter\n            <br />\n            <br />\n            Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n            associated documentation files (the \"Software\"), to deal in the Software without restriction,\n            including without limitation the rights to use, copy, modify, merge, publish, distribute,\n            sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n            furnished to do so, subject to the following conditions:\n            <br />\n            <br />\n            The above copyright notice and this permission notice shall be included in all copies or\n            substantial portions of the Software.\n            <br />\n            <br />\n            THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n            NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n            NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n            DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\n            OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function PrivacyPolicy(props) {\n  const { open, setOpen } = props;\n  const handleClose = () => {\n    setOpen({ openPPDialog: false });\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        fullWidth=\"true\"\n        maxWidth=\"md\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">DMPConverter Privacy Policy</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\" style={{ textAlign: \"justify\" }}>\n            <strong>Our contact </strong>\n            <br />\n            ELIXIR Belgium <br />\n            VIB-UGent Center for Plant Systems Biology (PSB) <br />\n            Technologiepark 71, <br />\n            9052 Zwijnaarde <br />\n            Phone: +32 (0)9 331 36 94 <br />\n            Email: datahub@elixir-belgium.org <br />\n            <br />\n            <strong>Type of personal information we collect </strong>\n            <br />\n            We collect and process the data contained in the file uploaded by the user to convert the format\n            of the file. <br />\n            We don't receive nor store any other personal information. <br />\n            <br />\n            <strong>How we store your personal information</strong> <br />\n            The data contained in the file uploaded by the user is securely stored in the website server\n            storage for 15 minutes. <br />\n            <br />\n            We keep the data contained in the file uploaded by the user for 15 minutes after the user has\n            started the conversion of a file with DMPConverter. After this period of time, all data will be\n            automatically deleted. <br />\n            We don't store any other personal information. We only store the converted file for 15 minutes in\n            order to be available for the user to download. <br />\n            <br />\n            The data contained in the file uploaded by the user will not be provided to third parties, unless\n            there is an appropriate legal ground for it, or you have given your explicit consent.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport FileUpload from \"../components/fileUpload\";\nimport ConvertType from \"../components/convertType\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Agreement from \"../components/agreement\";\nimport PrivacyPolicy from \"../components/privacyPolicy\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      termsAgreed: false,\n      openDialog: false,\n      openPPDialog: false\n    };\n  }\n  render() {\n    const onAgreed = () => {\n      this.setState({\n        termsAgreed: !this.state.termsAgreed\n      });\n    };\n    const handleDialog = () => {\n      this.setState({\n        openDialog: true\n      });\n    };\n    const handlePPDialog = () => {\n      this.setState({\n        openPPDialog: true\n      });\n    };\n    return (\n      <>\n        <div className={this.state.termsAgreed ? \"mainContainer\" : \"mainContainer disabled\"}>\n          <h1>DMP Converter</h1>\n          <small>Select the source file(s) to convert.</small>\n          <ConvertType {...this.props} />\n          <FileUpload {...this.props} />\n        </div>\n        <div className=\"center\">\n          <FormLabel component=\"legend\">\n            <Checkbox color=\"primary\" inputProps={{ \"aria-label\": \"primary checkbox\" }} onClick={onAgreed} />I\n            have read, understand and agree to the\n            <Link href=\"#\" onClick={handleDialog}>\n              {\" \"}\n              terms and conditions{\" \"}\n            </Link>\n            and\n            <Link href=\"#\" onClick={handlePPDialog}>\n              {\" \"}\n              privacy policy\n            </Link>\n          </FormLabel>\n        </div>\n        <Agreement open={this.state.openDialog} setOpen={(state) => this.setState(state)} />\n        <PrivacyPolicy open={this.state.openPPDialog} setOpen={(state) => this.setState(state)} />\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './containers/main'\nimport { connect } from 'react-redux'\nimport { changeFunder } from './actions/index'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main {...this.props} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedFunder: state.selectedFunder\n  }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n  return { changeFunder: (funder) => dispatch(changeFunder(funder)) }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const changeFunder = funder => {\n    return ({\n        type: 'CHANGE_FUNDER',\n        payload: { funder }\n    })\n}\n\nexport { changeFunder }","const initialState = {\n    selectedFunder: 'FWO'\n}\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"CHANGE_FUNDER\":\n            return { ...state, selectedFunder: action.payload.funder }\n        default:\n            return { ...state }\n    }\n}\n\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport Reducer from './reducers/index'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(Reducer, applyMiddleware(thunk))\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}